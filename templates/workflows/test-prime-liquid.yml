
{% render "xpacks/@xpack-dev-tools/xbb-helper/templates/workflows/copyright-liquid.yml" %}

{% if platforms == "all" -%}
{% assign platforms = "linux-x64,linux-arm64,linux-arm,darwin-x64,darwin-arm64,win32-x64" -%}
{% endif -%}
{% assign platforms = platforms | split: "," -%}

name: 'Test xPack {{appName}} on supported platforms'

on:
  workflow_dispatch:
    inputs:
      base_url:
        description: 'The folder part of the URL where binaries are stored'
        required: false
        default: 'release'
      version:
        description: 'The semver of the release'
        required: false
        default: 'current'
      helper-git-ref:
        description: 'The helper branch, tag or SHA to checkout'
        required: false
        default: '{{ branch }}'

jobs:
{% for platform in platforms -%}
{% case platform -%}
{% when "linux-x64" %}
  {{ platform }}-test:
    name: '{{ platform }} {{appLcName}} {% raw %}${{ github.event.inputs.version }}{% endraw %} test'
    runs-on: ubuntu-22.04

    steps:
      - name: 'Show environment'
        run: |
          uname -a
          lsb_release -sd
          echo "whoami: $(whoami)"
          echo "pwd: $(pwd)"
          ls -lLA
          env | sort | grep -E '^[^ \t]+='

      - name: 'Checkout project'
        uses: actions/checkout@v4
        with:
          fetch-depth: 3

      - name: 'Checkout helper {% raw %}${{ github.event.inputs.helper-git-ref }}{% endraw %}'
        uses: actions/checkout@v4
        with:
          repository: xpack-dev-tools/xbb-helper-xpack
          path: {{ prefix }}/xpacks/@xpack-dev-tools/xbb-helper
          ref: {% raw %}${{ github.event.inputs.helper-git-ref }}{% endraw %}
          fetch-depth: 3

      - name: 'Run {% raw %}${{ github.event.inputs.version }}{% endraw %} native test'
        run: bash {{ prefix }}/scripts/test.sh --image github-actions-ubuntu-latest --version {% raw %}${{ github.event.inputs.version }}{% endraw %} --base-url {% raw %}${{ github.event.inputs.base_url }}{% endraw %}

      - name: Upload platform tests report
        uses: actions/upload-artifact@v4
        with:
          name: tests-report-{{ platform }}
          path: {% raw %}${{ github.workspace }}{% endraw %}/{{ prefix }}/build/{{ platform }}/artefacts/tests-report-*.md
          overwrite: true
{% when "linux-arm64" %}
  {{ platform }}-test:
    name: '{{ platform }} {{appLcName}} {% raw %}${{ github.event.inputs.version }}{% endraw %} test'
    runs-on: [self-hosted, linux, arm64, xbbla]

    steps:
      - name: 'Show environment'
        run: |
          uname -a
          lsb_release -sd
          echo "whoami: $(whoami)"
          echo "pwd: $(pwd)"
          ls -lLA
          env | sort | grep -E '^[^ \t]+='

      - name: 'Clean working area' # Mandatory for self-hosted runners.
        run: |
          chmod -Rf a+w * || true
          rm -rf * .git*

      # https://github.com/actions/checkout
      - name: 'Checkout project'
        uses: actions/checkout@v4
        with:
          fetch-depth: 3

      - name: 'Checkout helper {% raw %}${{ github.event.inputs.helper-git-ref }}{% endraw %}'
        uses: actions/checkout@v4
        with:
          repository: xpack-dev-tools/xbb-helper-xpack
          path: {{ prefix }}/xpacks/@xpack-dev-tools/xbb-helper
          ref: {% raw %}${{ github.event.inputs.helper-git-ref }}{% endraw %}
          fetch-depth: 3

      - name: 'Run {% raw %}${{ github.event.inputs.version }}{% endraw %} docker test'
        uses: docker://node:lts-slim # Currently based on debian:12-slim
        with:
          entrypoint: /bin/bash
          args: /github/workspace/{{ prefix }}/scripts/test.sh --image ubuntu:22.04 --version {% raw %}${{ github.event.inputs.version }}{% endraw %} --base-url {% raw %}${{ github.event.inputs.base_url }}{% endraw %}

      - name: Upload platform tests report
        uses: actions/upload-artifact@v4
        with:
          name: tests-report-{{ platform }}
          path: {% raw %}${{ github.workspace }}{% endraw %}/{{ prefix }}/build/{{ platform }}/artefacts/tests-report-*.md
          overwrite: true
{% when "linux-arm" %}
  {{ platform }}-test:
    name: '{{ platform }} {{appLcName}} {% raw %}${{ github.event.inputs.version }}{% endraw %} test'
    runs-on: [self-hosted, linux, arm, xbbla32]

    steps:
      - name: 'Show environment'
        run: |
          uname -a
          lsb_release -sd
          echo "whoami: $(whoami)"
          echo "pwd: $(pwd)"
          ls -lLA
          env | sort | grep -E '^[^ \t]+='

      - name: 'Clean working area' # Mandatory for self-hosted runners.
        run: |
          chmod -Rf a+w * || true
          rm -rf * .git*

      # https://github.com/actions/checkout
      - name: 'Checkout project'
        uses: actions/checkout@v4
        with:
          fetch-depth: 3

      - name: 'Checkout helper {% raw %}${{ github.event.inputs.helper-git-ref }}{% endraw %}'
        uses: actions/checkout@v4
        with:
          repository: xpack-dev-tools/xbb-helper-xpack
          path: {{ prefix }}/xpacks/@xpack-dev-tools/xbb-helper
          ref: {% raw %}${{ github.event.inputs.helper-git-ref }}{% endraw %}
          fetch-depth: 3

      - name: 'Run {% raw %}${{ github.event.inputs.version }}{% endraw %} docker test'
        uses: docker://arm32v7/node:lts-slim # Currently based on debian:12-slim
        with:
          entrypoint: /bin/bash # /usr/bin/linux32
          args: /github/workspace/{{ prefix }}/scripts/test.sh --image debian --version {% raw %}${{ github.event.inputs.version }}{% endraw %} --base-url {% raw %}${{ github.event.inputs.base_url }}{% endraw %}

      - name: Upload platform tests report
        uses: actions/upload-artifact@v4
        with:
          name: tests-report-{{ platform }}
          path: {% raw %}${{ github.workspace }}{% endraw %}/{{ prefix }}/build/{{ platform }}/artefacts/tests-report-*.md
          overwrite: true
{% when "darwin-x64" %}
  {{ platform }}-test:
    name: '{{ platform }} {{appLcName}} {% raw %}${{ github.event.inputs.version }}{% endraw %} test'
    # https://github.com/actions/runner-images/blob/main/images/macos/macos-12-Readme.md
    runs-on: macos-12

    steps:
      - name: 'Show environment'
        run: |
          uname -a
          sw_vers
          ls -lA /Library/Developer/CommandLineTools/SDKs || true
          ls -lA /Applications
          sudo xcode-select --switch /Applications/Xcode_14.2.app
          xcode-select --print-path
          xcodebuild -version || true
          pkgutil --pkg-info=com.apple.pkg.CLTools_Executables || true
          clang++ -v
          echo "whoami: $(whoami)"
          echo "pwd: $(pwd)"
          ls -lLA
          env | sort | grep -E '^[^ \t]+='

      - name: 'Clean working area' # Mandatory for self-hosted runners.
        run: |
          chmod -Rf a+w * || true
          rm -rf * .git*

      # https://github.com/actions/checkout
      - name: 'Checkout project'
        uses: actions/checkout@v4
        with:
          fetch-depth: 3

      - name: 'Checkout helper {% raw %}${{ github.event.inputs.helper-git-ref }}{% endraw %}'
        uses: actions/checkout@v4
        with:
          repository: xpack-dev-tools/xbb-helper-xpack
          path: {{ prefix }}/xpacks/@xpack-dev-tools/xbb-helper
          ref: {% raw %}${{ github.event.inputs.helper-git-ref }}{% endraw %}
          fetch-depth: 3

      - name: 'Run {% raw %}${{ github.event.inputs.version }}{% endraw %} native test'
        run: bash {{ prefix }}/scripts/test.sh --version {% raw %}${{ github.event.inputs.version }}{% endraw %} --base-url {% raw %}${{ github.event.inputs.base_url }}{% endraw %}

      - name: Upload platform tests report
        uses: actions/upload-artifact@v4
        with:
          name: tests-report-{{ platform }}
          path: {% raw %}${{ github.workspace }}{% endraw %}/{{ prefix }}/build/{{ platform }}/artefacts/tests-report-*.md
          overwrite: true
{% when "darwin-arm64" %}
  {{ platform }}-test:
    name: '{{ platform }} {{appLcName}} {% raw %}${{ github.event.inputs.version }}{% endraw %} test'
    # https://github.com/actions/runner-images/blob/main/images/macos/macos-14-Readme.md
    runs-on: macos-14

    steps:
      - name: 'Show environment'
        run: |
          uname -a
          sw_vers
          ls -lA /Library/Developer/CommandLineTools/SDKs || true
          ls -lA /Applications
          sudo xcode-select --switch /Applications/Xcode_15.4.app
          xcode-select --print-path
          xcodebuild -version || true
          pkgutil --pkg-info=com.apple.pkg.CLTools_Executables || true
          clang++ -v
          echo "whoami: $(whoami)"
          echo "pwd: $(pwd)"
          ls -lLA
          env | sort | grep -E '^[^ \t]+='

      - name: 'Clean working area' # Mandatory for self-hosted runners.
        run: |
          chmod -Rf a+w * || true
          rm -rf * .git*

      # https://github.com/actions/checkout
      - name: 'Checkout project'
        uses: actions/checkout@v4
        with:
          fetch-depth: 3

      - name: 'Checkout helper {% raw %}${{ github.event.inputs.helper-git-ref }}{% endraw %}'
        uses: actions/checkout@v4
        with:
          repository: xpack-dev-tools/xbb-helper-xpack
          path: {{ prefix }}/xpacks/@xpack-dev-tools/xbb-helper
          ref: {% raw %}${{ github.event.inputs.helper-git-ref }}{% endraw %}
          fetch-depth: 3

      - name: 'Run {% raw %}${{ github.event.inputs.version }}{% endraw %} native test'
        run: bash {{ prefix }}/scripts/test.sh --version {% raw %}${{ github.event.inputs.version }}{% endraw %} --base-url {% raw %}${{ github.event.inputs.base_url }}{% endraw %}

      - name: Upload platform tests report
        uses: actions/upload-artifact@v4
        with:
          name: tests-report-{{ platform }}
          path: {% raw %}${{ github.workspace }}{% endraw %}/{{ prefix }}/build/{{ platform }}/artefacts/tests-report-*.md
          overwrite: true
{% when "win32-x64" %}
  {{ platform }}-test:
    name: '{{ platform }} {{appLcName}} {% raw %}${{ github.event.inputs.version }}{% endraw %} test'
    runs-on: windows-2022
    defaults:
      run:
        # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsshell
        shell: bash # for --

    steps:
      - name: 'Show environment'
        run: |
          uname -a
          systeminfo # lsb_release -sd
          echo "whoami: $(whoami)"
          echo "pwd: $(pwd)"
          ls -lLA
          env | sort | grep -E '^[^ \t]+='

      # https://github.com/actions/checkout
      - name: 'Checkout project'
        uses: actions/checkout@v4
        with:
          fetch-depth: 3

      - name: 'Checkout helper {% raw %}${{ github.event.inputs.helper-git-ref }}{% endraw %}'
        uses: actions/checkout@v4
        with:
          repository: xpack-dev-tools/xbb-helper-xpack
          path: {{ prefix }}/xpacks/@xpack-dev-tools/xbb-helper
          ref: {% raw %}${{ github.event.inputs.helper-git-ref }}{% endraw %}
          fetch-depth: 3

      - name: 'Run {% raw %}${{ github.event.inputs.version }}{% endraw %} native test'
        run: bash {{ prefix }}/scripts/test.sh --version {% raw %}${{ github.event.inputs.version }}{% endraw %} --base-url {% raw %}${{ github.event.inputs.base_url }}{% endraw %}

      - name: Upload platform tests report
        uses: actions/upload-artifact@v4
        with:
          name: tests-report-{{ platform }}
          path: {% raw %}${{ github.workspace }}{% endraw %}/{{ prefix }}/build/{{ platform }}/artefacts/tests-report-*.md
          overwrite: true
{% endcase -%}
{% endfor %}
  generate-tests-report:
    name: 'Generate tests report for {{appName}}@{% raw %}${{ github.event.inputs.version }}{% endraw %}'
    runs-on: ubuntu-22.04
    needs: [{{ platforms | join: "-test, " | append: "-test"}}]

    steps:
      - name: Download platform test reports
        uses: actions/download-artifact@v4
        with:
          path: {% raw %}${{ github.workspace }}{% endraw %}/{{ prefix }}/artefacts
          merge-multiple: true

      - name: Concatenate platform test reports
        run: |
          ls -lR {% raw %}${{ github.workspace }}{% endraw %}/{{ prefix }}/artefacts
          touch {% raw %}${{ github.workspace }}{% endraw %}/{{ prefix }}/artefacts/tests-report.md
          echo "---" >>{% raw %}${{ github.workspace }}{% endraw %}/{{ prefix }}/artefacts/tests-report.md
          echo "title: {{appName}} {% raw %}${{ github.event.inputs.version }}{% endraw %} test results" >>{% raw %}${{ github.workspace }}{% endraw %}/{{ prefix }}/artefacts/tests-report.md
          echo >>{% raw %}${{ github.workspace }}{% endraw %}/{{ prefix }}/artefacts/tests-report.md
          echo "date: $(date "+%Y-%m-%d %H:%M:%S %z")" >>{% raw %}${{ github.workspace }}{% endraw %}/{{ prefix }}/artefacts/tests-report.md
          echo >>{% raw %}${{ github.workspace }}{% endraw %}/{{ prefix }}/artefacts/tests-report.md
          echo "---" >>{% raw %}${{ github.workspace }}{% endraw %}/{{ prefix }}/artefacts/tests-report.md
          echo >>{% raw %}${{ github.workspace }}{% endraw %}/{{ prefix }}/artefacts/tests-report.md
          (cd {% raw %}${{ github.workspace }}{% endraw %}; cat -s {% for platform in platforms %}{{ prefix }}/artefacts/tests-report-{{ platform }}.md {% endfor %} | tee -a {{ prefix }}/artefacts/tests-report.md)
          mv -v {% raw %}${{ github.workspace }}{% endraw %}/{{ prefix }}/artefacts/tests-report.md {% raw %}${{ github.workspace }}{% endraw %}/{{ prefix }}/artefacts/{% raw %}${{ github.event.inputs.version }}{% endraw %}.md

      - name: Upload tests report
        uses: actions/upload-artifact@v4
        with:
          name: tests-report
          path: {% raw %}${{ github.workspace }}{% endraw %}/{{ prefix }}/artefacts/{% raw %}${{ github.event.inputs.version }}{% endraw %}.md
          overwrite: true

# -----------------------------------------------------------------------------
